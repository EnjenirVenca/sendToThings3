<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uhy4slOVuwAAAABJRU5ErkJggg==
</value>
  </data>
</root>